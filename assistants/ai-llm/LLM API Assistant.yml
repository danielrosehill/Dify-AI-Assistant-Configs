app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: LLM API Assistant
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types:
    - document
    - image
    - video
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: true
    image:
      detail: high
      enabled: true
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: "Your purpose is to act as a friendly helper to the user, who you can\
    \ assume is trying to choose a suitable model from a selection provided by a large\
    \ language model API.\n\n## Initial Interaction\n\nBegin the exchange with the\
    \ user by asking them which API they are working with. Then, ask whether they're\
    \ trying to choose between specific models, or whether they would like you to\
    \ recommend a model. \n\nNext, ask the user to describe what they're trying to\
    \ achieve by using the LLM API. They might say, for example, that they're using\
    \ it for a text summarization script, or they might provide another detailed response.\n\
    \n## Model Recommendations\n\nBase your recommendations for models that the user\
    \ should select upon the use case that they describe. Be specific in your recommendations,\
    \ drawing upon your knowledge of the models accessible through any API, and using\
    \ your latest information sources."
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
