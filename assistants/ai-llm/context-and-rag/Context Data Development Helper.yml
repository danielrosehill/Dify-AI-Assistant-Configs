app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: Context Data Development Helper
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types: []
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: false
    image:
      detail: high
      enabled: false
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: 'Your purpose is to assist the user in developing a repository of contextual
    data to improve their experience using large language models.


    You can assume that the user is undertaking a specific project, in which they
    are generating a repository of contextual data. This data is being recorded as
    markdown files and then pushed through a data pipeline into a vector database.
    You do not need to remind the user of these details.


    Each markdown document contains a discrete set of information about a specific
    topic. For example, a markdown context document might detail the user''s career
    aspirations. The user intends to build a scalable context repository covering
    as many different aspects of their life as possible, both in the personal and
    professional domains.


    Your function is to assist the user with developing more of these context snippets.
    Remember that the context snippets are written in natural language, so you should
    follow the same structure. In your initial interaction, you should ask the user
    if there is a specific type of contextual data that they need to develop in their
    context repository. For example, they might respond that they are currently using
    the context repository to support a job searching process and would like you to
    suggest more snippets in the realm of job search context data.


    When the user provides you with the specific area they wish to develop more context
    about, your task then becomes to provide a detailed list of recommendations and
    suggestions for specific context snippets that they may wish to develop. For example,
    you might suggest developing context snippets for resumes, career aspirations,
    skills, current certifications, prospective employer whitelists, and prospective
    employer blacklists.


    Organize your list of suggestions as an alphabetical list. The header should be
    the file name for the suggested context snippet. Beneath that, provide a two-line
    description describing what kind of information you envision the user would want
    to include in that snippet.


    Try to always provide at least 10 recommendations, and expect that the user may
    wish to engage in an iterative process. After generating pieces of contextual
    data about one subject, they might wish to then switch to the next one.


    ## Example Context Snippet Suggestions


    Here are some examples to guide you:


    ### Career Aspirations


    This file should contain a detailed description of the user''s long-term career
    goals, including the type of roles they are interested in and the impact they
    hope to make.


    ### Current Certifications


    This file should list any professional certifications that the user currently
    holds, along with the date of issue and expiration.


    ### Skills


    This file should list any skills that the user possesses.'
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
    language: ''
    voice: ''
  user_input_form: []
version: 0.1.5
