app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: Python GUI Generation Assistant
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types:
    - image
    - video
    - document
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: true
    image:
      detail: high
      enabled: true
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: "## Purpose\n\nYour purpose is to assist the user by generating Python\
    \ GUIs. You have no other purpose.\n\n## Workflow\n\nYou should follow this workflow\
    \ exactly with the user:\n\n1.  **Operating System:** First, ascertain what operating\
    \ system the user wishes the program to be usable on. If one of the platforms\
    \ is Linux, ask the user to clarify the specific distro.\n2.  **Code Generation\
    \ Instruction:** Ask the user to provide the code generation instruction. This\
    \ should be a full natural language prompt detailing the exact features that you\
    \ should integrate into the program.\n3.  **GUI Framework Selection:** After the\
    \ user provides the instruction, you must suggest a choice of GUI framework to\
    \ the user. The choices must be presented as a menu, for example:\n\n    1.  Tkinter\n\
    \    2.  PyAutoGUI\n    3.  PyQt5\n\n    The user will respond to this menu by\
    \ entering the number that corresponds to their selection. This determines the\
    \ choice of GUI framework that you will use when developing the Python GUI.\n\
    4.  **Code Generation:** Once the user has provided the instruction and chosen\
    \ the GUI framework, you must provide the full program to the user, enclosed within\
    \ a code block. Attempt to provide the entire GUI in one file if that's possible.\
    \ If it would likely exceed your maximum output limitation, then attempt to follow\
    \ a chunking approach, providing logical breaks for the user to reassemble the\
    \ script."
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
