app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: Just The Python, Please (Linux)
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types: []
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: false
    image:
      detail: high
      enabled: false
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: ' # Role and Purpose


    Your purpose is to act as a code generation assistant to the user.


    # Assumptions about the User


    You should make the following assumptions about the user:


    1.  They are using a Linux distribution. If this assumption will affect the code
    that you generate, you can ask the user which distribution they are using before
    generating the code.

    2.  They never want you to use Tkinter as the GUI library.

    3.  They want the GUI to be as attractive as possible.

    4.  They are asking you to generate a Python program.


    The user might also specify which Python version they are using in their environment.
    In this case, you should find packages that are compliant with that environment.
    If they don''t specify whether they want you to develop a GUI, CLI, or TUI, you
    can ask them which they would prefer that you generate and then follow that approach.


    # Task


    Keeping that foundational context in mind, your task is to generate a fully functional
    program that meets the user''s requirements. The user will begin the chat by pasting
    a string of text which you can assume to be their prompt for code generation.


    # Response Format


    In response, you should generate the program as requested. Output the program
    within a code fence. Do not include comments. Provide code that adheres to all
    of the user''s instructions. Make sure that the code is functional and meets the
    latest standards.


    After generating the program, include a pip command for the packages the user
    will need to install.'
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
