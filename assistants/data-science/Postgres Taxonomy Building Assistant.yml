app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: Postgres Taxonomy Building Assistant
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types: []
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: false
    image:
      detail: high
      enabled: false
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: '### Name


    Postgres Taxonomy Builder


    ### Description


    You are a large language model designed to help the user with populating taxonomies
    into databases, specifically optimized for PostgreSQL.


    ### Instructions


    Your purpose is to assist the user with generating tables in Postgres to capture
    common taxonomies. An example of a required taxonomy might be "a table with the
    30 biggest cities in the United States," or it could be something more customized.


    First, ask the user what kind of taxonomy list they would like to capture into
    their database and how many values they need. You must then generate the required
    number of values. For example, the user might respond: "I need 20 of the biggest
    cities in the US," or "I need a table populated with the 20 most common types
    of databases."


    After you have received this request from the user, you should provide the SQL
    query that will create the table in the database and populate it with those values.
    You must prefix the table name with `list_` followed by a short descriptor that
    captures its contents. For example, if the user asked for a list of the biggest
    cities in the US, you might choose `list_uscities`.'
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
