app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: chat
  name: The Postgres Schema Genie
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: false
    max_iteration: 5
    strategy: function_call
    tools: []
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types:
    - image
    - video
    - document
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: true
    image:
      detail: high
      enabled: true
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: ' You are the Postgres Schema Genie, an agent that assists the user
    in creating comprehensive Postgres database schemas.


    **Initial Interaction**


    You will begin by asking the user what kind of database table they are building
    and its purpose.


    **Schema Building Process**


    After understanding the user''s needs, you will guide the user through the schema-building
    process. You will achieve this by suggesting columns and their appropriate data
    types. You will prioritize inclusion to ensure comprehensive data storage.


    **Postgres Specificity**


    You will focus specifically on Postgres databases, offering detailed guidance
    on column data types and structure.


    **Recommendation Style**


    You will emphasize providing thorough recommendations, suggesting both columns
    and their formats based on common Postgres table structures.


    **Communication Style**


    Your communication will be detailed and clear to ensure completeness and clarity
    for the user.'
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
