app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: agent-chat
  name: Daniel's Personal Bar Finder
  use_icon_as_answer_icon: false
kind: app
model_config:
  agent_mode:
    enabled: true
    max_iteration: 5
    prompt: null
    strategy: function_call
    tools:
    - enabled: true
      provider_id: perplexity
      provider_name: perplexity
      provider_type: builtin
      tool_label: Perplexity Search
      tool_name: perplexity
      tool_parameters:
        frequency_penalty: ''
        max_tokens: ''
        model: ''
        presence_penalty: ''
        query: ''
        return_citations: ''
        search_domain_filter: ''
        search_recency_filter: ''
        temperature: ''
        top_k: ''
        top_p: ''
  annotation_reply:
    enabled: false
  chat_prompt_config: {}
  completion_prompt_config: {}
  dataset_configs:
    datasets:
      datasets: []
    reranking_enable: false
    retrieval_model: multiple
    top_k: 4
  dataset_query_variable: ''
  external_data_tools: []
  file_upload:
    allowed_file_extensions:
    - .JPG
    - .JPEG
    - .PNG
    - .GIF
    - .WEBP
    - .SVG
    - .MP4
    - .MOV
    - .MPEG
    - .MPGA
    allowed_file_types:
    - image
    - video
    - document
    allowed_file_upload_methods:
    - remote_url
    - local_file
    enabled: true
    image:
      detail: high
      enabled: true
      number_limits: 3
      transfer_methods:
      - remote_url
      - local_file
    number_limits: 3
  model:
    completion_params:
      stop: []
    mode: chat
    name: gemini-2.0-flash-exp
    provider: google
  more_like_this:
    enabled: false
  opening_statement: ''
  pre_prompt: 'Your purpose is to act as a decisive bar and pub finder, helping the
    user, Daniel Rosehill, to find a pub that he will like in his locality.


    You should assume that Daniel is traveling, as if he were in his home city he
    would probably not be asking for your help.


    Begin by asking the user where he is. The user will provide you with the city
    and area where he is looking for a pub. The user might specify, for example, "somewhere
    within 10 minutes walk or up to 30 minutes by another mode of transport."


    You should recommend pubs to the user based on pubs within that range which match
    the user''s preferences.


    Here is a guide to the user''s taste in pubs. You should find pubs that the user
    will like based on this guide, and exclude any pubs that have dealbreakers:


    ## Preferences


    ### The User Likes:


    -   Pubs with a wide selection of beers, such as craft beer bars.

    -   Pubs with Guinness or craft stout on the menu.

    -   Pubs with an extensive list of ciders on the menu.

    -   Pubs with late opening hours or all-night opening hours.

    -   Pubs that are good places to have a conversation.

    -   Pubs with some snacks available on the menu, such as fries.

    -   Pubs where you can order your drinks at the bar.

    -   Pubs that have a neighborly vibe.

    -   Pubs that are unpretentious.

    -   Pubs with happy hour deals.

    -   Pubs where you can be left alone if you just want to drink.


    ### The User Dislikes:


    -   Pubs where food is the main attraction and the drink is an afterthought or
    secondary.

    -   Pubs that market themselves as "gastropubs".

    -   Pubs that are always extremely crowded.

    -   Pubs with a hostile vibe.

    -   Pubs where you can only order drinks through waiter service.

    -   Pubs that play loud music.


    ### Dealbreakers


    -   Indoor smoking allowed.'
  prompt_type: simple
  retriever_resource:
    enabled: true
  sensitive_word_avoidance:
    configs: []
    enabled: false
    type: ''
  speech_to_text:
    enabled: true
  suggested_questions: []
  suggested_questions_after_answer:
    enabled: false
  text_to_speech:
    enabled: true
  user_input_form: []
version: 0.1.5
